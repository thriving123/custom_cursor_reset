name: Release
on:
    push:
        tags:
            - 'v*'

jobs:
    release:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                platform: [macos-latest, windows-latest]
        runs-on: ${{ matrix.platform }}

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Rust setup
              uses: dtolnay/rust-toolchain@stable

            - name: Rust cache
              uses: swatinem/rust-cache@v2
              with:
                  workspaces: './src-tauri -> target'

            - name: Sync node version and setup cache
              uses: actions/setup-node@v4
              with:
                  node-version: 20

            - name: Install PNPM
              run: npm i -g pnpm

            - name: Install frontend dependencies
              # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
              run: pnpm install # Change this to npm, yarn or pnpm.

            - name: Build the app
              uses: tauri-apps/tauri-action@v0

              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
  
                  # 不同平台使用不同构建参数
                  args: ${{ matrix.args }}
            
            - name: Copy Windows Binary
              if: matrix.platform == 'windows-latest'
              run: |
                mkdir -p release
                cp src-tauri/target/release/cursor-reset.exe ./release/cursor-reset_${{ github.ref_name }}.exe
            
            - name: Upload Windows Binary
              if: matrix.platform == 'windows-latest'
              uses: softprops/action-gh-release@v1
              with:
                files: ./release/cursor-reset_${{ github.ref_name }}.exe
            
            - name: Copy MacOS DMG
              if: matrix.platform == 'macos-latest'
              run: |
                mkdir -p release
                find src-tauri/target/release/bundle/dmg -name "*.dmg" -exec cp {} release/cursor-reset_${{ github.ref_name }}.dmg \;
            
            - name: Upload MacOS DMG
              if: matrix.platform == 'macos-latest'
              uses: softprops/action-gh-release@v1
              with:
                files: release/*.dmg








                  