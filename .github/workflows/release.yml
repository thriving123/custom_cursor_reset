name: Release

on:
  push:
    tags:
      - 'v*' # 匹配以 v 开头的标签，如 v1.0.0

jobs:
  build:
    strategy:
      matrix:
        platform: [macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm' # 如果你使用 pnpm，改成 npm 或 yarn 如果你用它们

      - name: Install dependencies
        run: |
          pnpm install # 或 npm install / yarn install
          sudo apt-get update && sudo apt-get install -y libwebkit2gtk-4.0-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
          # 仅 Linux 需要上面这行，但保留在这里以防万一

      - name: Install Tauri CLI
        run: pnpm add -g @tauri-apps/cli # 或 npm install -g / yarn global add

      - name: Build Tauri app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm tauri build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-build
          path: src-tauri/target/release/bundle/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automated release for version ${{ github.ref_name }}
            Built artifacts:
            - Windows: .exe installer
            - macOS: .dmg installer
          draft: false
          prerelease: false
          files: |
            artifacts/windows-latest-build/*.exe
            artifacts/windows-latest-build/*.msi
            artifacts/macos-latest-build/*.dmg
            artifacts/macos-latest-build/*.app.tar.gz
            artifacts/macos-latest-build/*.app.zip